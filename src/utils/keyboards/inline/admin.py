from typing import Optional
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder


# ================================================================= Orders

async def orders_inline_keyboard(order_id: Optional[int] = None) -> InlineKeyboardMarkup:
    callback_text = 'show_orders'
    if order_id:
        callback_text = f'save_choose_status_{order_id}'

    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='–ù–æ–≤—ã–µ –ó–∞–∫–∞–∑—ã', callback_data=f'new_{callback_text}'),
            ],
            [
                InlineKeyboardButton(text='–ù–∞ –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏', callback_data=f'coord_{callback_text}'),
                InlineKeyboardButton(text='–í –†–∞–±–æ—Ç–µ', callback_data=f'work_{callback_text}'),
            ],
            [
                InlineKeyboardButton(text='–ù–∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏', callback_data=f'test_{callback_text}'),
            ],
            [
                InlineKeyboardButton(text='–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', callback_data=f'finish_{callback_text}'),
            ],
        ]
    )


async def get_order_info_inline_keyboard(order_id: int, is_task: bool = False) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if is_task:
        builder.row(
            InlineKeyboardButton(text='üì• –°–∫–∞—á–∞—Ç—å –¢–µ—Ö–Ω.–ó–∞–¥–∞–Ω–∏–µ', callback_data=f'download_file_order_{order_id}')
        )
    builder.row(
        InlineKeyboardButton(text='üîÑ –ò–∑–º–µ–Ω–∏—Ç—å –°—Ç–∞—Ç—É—Å', callback_data=f'change_status_order_{order_id}'),
        InlineKeyboardButton(text='üë§ –ü–æ–∫–∞–∑–∞—Ç—å –ó–∞–∫–∞–∑—á–∏–∫–∞', callback_data=f'show_customer_order_{order_id}'),
        width=1
    )
    return builder.as_markup()


# ================================================================= Promo Codes
async def promo_code_inline_keyboards() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã', callback_data='show_promo_code')
            ],
            [
                InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', callback_data=f'create_promo_code'),
            ],
        ]
    )


async def get_promo_code_info_inline_keyboard(promo_code_id: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='‚ùå –£–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥', callback_data=f'delete_promo_code_{promo_code_id}')
            ],
            [
                InlineKeyboardButton(text='üë§ –ü–æ–∫–∞–∑–∞—Ç—å –í–ª–∞–¥–µ–ª—å—Ü–∞', callback_data=f'show_promo_code_user_{promo_code_id}'),
            ],
        ]
    )


# ================================================================= Reviews
async def reviews_inline_keyboards() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='#Ô∏è‚É£ –ü–æ–∫–∞–∑–∞—Ç—å –û—Ç–∑—ã–≤—ã', callback_data=f'show_reviews')
            ]
        ]
    )


async def get_review_info_inline_keyboard(review_id: int, is_publish: bool) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if is_publish:
        builder.row(
            InlineKeyboardButton(text='‚¨áÔ∏è –°–Ω—è—Ç—å —Å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏', callback_data=f'remove_public_review_{review_id}')
        )
    else:
        builder.row(
            InlineKeyboardButton(text='‚¨ÜÔ∏è –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data=f'add_public_review_{review_id}')
        )
    return builder.as_markup()


# ================================================================= Users
async def users_inline_keyboards() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='üë• –ü–æ–∫–∞–∑–∞—Ç—å –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='show_users')
            ],
        ]
    )


async def get_user_info_inline_keyboard(user_id: int, is_ban: bool) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if is_ban:
        builder.row(
            InlineKeyboardButton(text='‚¨ÜÔ∏è –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'unblock_user_{user_id}')
        )
    else:
        builder.row(
            InlineKeyboardButton(text='‚¨áÔ∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'block_user_{user_id}')
        )
    return builder.as_markup()


# ================================================================= Settings
async def settings_inline_keyboards() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text='üóÑ –ù–∞—à–∏ –†–∞–±–æ—Ç—ã', callback_data='our_jobs'),
            ],
        ]
    )


async def add_our_works(is_jobs: bool) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if is_jobs:
        builder.row(
            InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –†–∞–±–æ—Ç—É', callback_data='change_project')
        )
    builder.row(
        InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –†–∞–±–æ—Ç—É', callback_data='add_job')
    )
    return builder.as_markup()


async def get_project_info_inline_keyboard(project_id: int, deleted: bool) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text='üì∑ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏', callback_data=f'download_photos_project_{project_id}'))
    if deleted:
        builder.row(
            InlineKeyboardButton(text='‚¨ÜÔ∏è –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å', callback_data=f'publish_project_{project_id}')
        )
    else:
        builder.row(
            InlineKeyboardButton(text='‚¨áÔ∏è –°–Ω—è—Ç—å —Å –ü—É–±–ª–∏–∫–∞—Ü–∏–∏', callback_data=f'unpublish_project_{project_id}')
        )
    builder.row(
        InlineKeyboardButton(text='‚úèÔ∏è –ó–∞–≥–æ–ª–æ–≤–æ–∫', callback_data=f'edit_project_title_{project_id}'),
        InlineKeyboardButton(text='‚úèÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ', callback_data=f'edit_project_description_{project_id}'),
    )
    builder.row(
        InlineKeyboardButton(text='‚úèÔ∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', callback_data=f'edit_project_technology_{project_id}'),
        InlineKeyboardButton(text='‚úèÔ∏è –§–æ—Ç–æ', callback_data=f'edit_project_images_{project_id}'),
    )
    return builder.as_markup()
